#!/usr/bin/env python3
"""
–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
"""

import json
import shutil
from pathlib import Path
from datetime import datetime

def backup_existing_config():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config_path = Path(".vscode/mcp.json")
    
    if config_path.exists():
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_path = Path(f".vscode/mcp.json.backup_{timestamp}")
        
        shutil.copy2(config_path, backup_path)
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_path}")
        return str(backup_path)
    
    return None

def create_fresh_config():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–µ–∂–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP"""
    
    config = {
        "inputs": [
            {
                "type": "promptString",
                "id": "github_token",
                "description": "GitHub Personal Access Token",
                "password": True
            }
        ],
        "servers": {
            "context7": {
                "type": "http",
                "url": "https://mcp.context7.com/mcp",
                "headers": {
                    "Authorization": "Bearer ctx7sk-a4b869ca-c3ab-4981-9adb-706327247c2d"
                }
            },
            "github": {
                "command": "docker",
                "args": [
                    "run",
                    "-i", 
                    "--rm",
                    "-e",
                    "GITHUB_PERSONAL_ACCESS_TOKEN",
                    "-e", 
                    "GITHUB_TOOLSETS",
                    "ghcr.io/github/github-mcp-server"
                ],
                "env": {
                    "GITHUB_PERSONAL_ACCESS_TOKEN": "${input:github_token}",
                    "GITHUB_TOOLSETS": "context,repos,issues,pull_requests,actions,code_security,discussions,notifications,orgs,users"
                }
            }
        }
    }
    
    return config

def save_config(config):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config_path = Path(".vscode/mcp.json")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    config_path.parent.mkdir(exist_ok=True)
    
    try:
        with open(config_path, 'w', encoding='utf-8') as f:
            json.dump(config, f, indent=2, ensure_ascii=False)
        
        print(f"‚úÖ –ù–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {config_path}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return False

def validate_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config_path = Path(".vscode/mcp.json")
    
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        servers = config.get("servers", {})
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Context7
        if "context7" in servers:
            context7 = servers["context7"]
            if context7.get("type") == "http" and context7.get("url"):
                print("‚úÖ Context7 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
            else:
                print("‚ùå Context7 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è")
                return False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub MCP
        if "github" in servers:
            github = servers["github"]
            if github.get("command") == "docker":
                print("‚úÖ GitHub MCP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
            else:
                print("‚ùå GitHub MCP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è")
                return False
        
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
        return False

def main():
    print("üîß –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = backup_existing_config()
    
    # –°–æ–∑–¥–∞–µ–º —Å–≤–µ–∂—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    fresh_config = create_fresh_config()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    if save_config(fresh_config):
        print("\nüîç –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        
        if validate_config():
            print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ! –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞")
            
            if backup_path:
                print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
            
            print(f"\nüîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            print("1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor")
            print("2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 2-3 –º–∏–Ω—É—Ç—ã")
            print("3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —á–∞—Ç")
            print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: '–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä—ã React —Ö—É–∫–æ–≤'")
            
        else:
            print(f"\n‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏")
            
            if backup_path:
                print(f"üí° –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {backup_path}")
    
    else:
        print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
        
        if backup_path:
            print(f"üí° –ò—Å—Ö–æ–¥–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {backup_path}")

if __name__ == "__main__":
    main()



