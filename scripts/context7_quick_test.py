#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Context7 API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º library_id
"""

import requests
import json

API_KEY = "ctx7sk-a4b869ca-c3ab-4981-9adb-706327247c2d"
BASE_URL = "https://context7.com/api/v1"

def test_docs_api():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º"""
    
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Microsoft TypeScript
    library_id = "microsoft/typescript"  # –£–±–∏—Ä–∞–µ–º "/websites/" –ø—Ä–µ—Ñ–∏–∫—Å
    
    params = {
        "library_id": library_id,
        "tokens": 2000,
        "topic": "basics"
    }
    
    print(f"üìö –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...")
    print(f"üÜî Library ID: {library_id}")
    print(f"üéØ Topic: {params['topic']}")
    print(f"üî¢ Tokens: {params['tokens']}")
    
    try:
        response = requests.get(
            f"{BASE_URL}/docs",
            headers=headers,
            params=params,
            timeout=15
        )
        
        print(f"üìä Status: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞!")
            
            content = data.get('content', '')
            if content:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤
                preview = content[:500] + "..." if len(content) > 500 else content
                print(f"\nüìñ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ({len(content)} —Å–∏–º–≤–æ–ª–æ–≤):")
                print("-" * 60)
                print(preview)
                print("-" * 60)
                return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_multiple_libraries():
    """–¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫"""
    
    libraries_to_test = [
        ("react", "hooks"),
        ("microsoft/typescript", "interfaces"), 
        ("vercel/next.js", "routing")
    ]
    
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫:")
    print("=" * 60)
    
    for lib_id, topic in libraries_to_test:
        print(f"\nüìö {lib_id} (—Ç–µ–º–∞: {topic})")
        
        params = {
            "library_id": lib_id,
            "topic": topic,
            "tokens": 1000
        }
        
        try:
            response = requests.get(
                f"{BASE_URL}/docs",
                headers=headers,
                params=params,
                timeout=10
            )
            
            if response.status_code == 200:
                data = response.json()
                content = data.get('content', '')
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—É—á–µ–Ω–æ {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤
                if content:
                    preview = content[:200].replace('\n', ' ')
                    print(f"üìñ –ü—Ä–µ–≤—å—é: {preview}...")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text[:100]}...")
                
        except Exception as e:
            print(f"‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: {e}")

def main():
    print("üß† Context7 API - –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç")
    print("=" * 50)
    
    print("1Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:")
    success = test_docs_api()
    
    print(f"\n2Ô∏è‚É£ –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫:")
    test_multiple_libraries()
    
    print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    if success:
        print("‚úÖ Context7 API –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("üöÄ MCP —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Cursor")
    else:
        print("‚ö†Ô∏è API —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–æ–∏—Å–∫ OK, –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞)")

if __name__ == "__main__":
    main()





