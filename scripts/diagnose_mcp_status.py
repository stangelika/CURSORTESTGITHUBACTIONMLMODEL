#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
"""

import json
from pathlib import Path

def check_mcp_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤...")
    print("=" * 50)
    
    config_path = Path(".vscode/mcp.json")
    
    if not config_path.exists():
        print("‚ùå –§–∞–π–ª .vscode/mcp.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
        
        servers = config.get("servers", {})
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {len(servers)}")
        
        for name, server_config in servers.items():
            print(f"\nüîß –°–µ—Ä–≤–µ—Ä: {name}")
            
            if name == "context7":
                print("   –¢–∏–ø: HTTP remote server")
                url = server_config.get("url", "")
                print(f"   URL: {url}")
                
                headers = server_config.get("headers", {})
                auth = headers.get("Authorization", "")
                if auth.startswith("Bearer"):
                    print(f"   API –∫–ª—é—á: {auth[:20]}...")
                    print("   ‚úÖ API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                else:
                    print("   ‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            elif name == "github":
                print("   –¢–∏–ø: Docker container")
                command = server_config.get("command", "")
                print(f"   –ö–æ–º–∞–Ω–¥–∞: {command}")
                
                if command == "docker":
                    print("   ‚úÖ Docker –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                else:
                    print("   ‚ùå Docker –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        return True
        
    except json.JSONDecodeError:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return False

def provide_troubleshooting():
    """–°–æ–≤–µ—Ç—ã –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º"""
    print(f"\nüõ†Ô∏è –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å MCP:")
    print("=" * 40)
    
    print("1. üîÑ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Cursor –ü–û–õ–ù–û–°–¢–¨–Æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
    print("   ‚Ä¢ –ó–∞–∫—Ä–æ–π—Ç–µ –≤—Å–µ –æ–∫–Ω–∞ Cursor")
    print("   ‚Ä¢ –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å —á–µ—Ä–µ–∑ –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ Cursor –∑–∞–Ω–æ–≤–æ")
    
    print("\n2. üß† Context7 MCP –ø—Ä–æ–±–ª–µ–º—ã:")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
    print("   ‚Ä¢ API –∫–ª—é—á –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    print("   ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 1-2 –º–∏–Ω—É—Ç—ã")
    
    print("\n3. üêô GitHub MCP –ø—Ä–æ–±–ª–µ–º—ã:")
    print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Docker Desktop –∑–∞–ø—É—â–µ–Ω")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: docker --version")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ GitHub Personal Access Token")
    
    print("\n4. üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ Cursor:")
    print("   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–π —á–∞—Ç")
    print("   ‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å MCP –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Developer Tools")

def main():
    if check_mcp_config():
        provide_troubleshooting()
    
    print(f"\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor")
    print("2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ MCP")
    print("3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —á–∞—Ç")
    print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞: '–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä—ã React —Ö—É–∫–æ–≤'")

if __name__ == "__main__":
    main()



