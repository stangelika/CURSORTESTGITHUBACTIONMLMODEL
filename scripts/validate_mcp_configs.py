#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ MCP
"""

import json
import os
from pathlib import Path
from typing import List, Dict, Any

def check_json_file(file_path: Path) -> tuple[bool, str]:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ JSON —Ñ–∞–π–ª–∞"""
    
    if not file_path.exists():
        return False, f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}"
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        return True, f"‚úÖ –í–∞–ª–∏–¥–Ω—ã–π JSON: {len(data)} –∫–ª—é—á–µ–π"
    except json.JSONDecodeError as e:
        return False, f"‚ùå –û—à–∏–±–∫–∞ JSON: {e}"
    except Exception as e:
        return False, f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∞–π–ª–∞: {e}"

def validate_context7_config(config_path: Path) -> List[str]:
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Context7"""
    results = []
    
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∏ Context7
        if config.get('name') == 'context7':
            results.append("‚úÖ –ò–º—è —Å–µ—Ä–≤–µ—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            results.append("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞")
        
        server = config.get('server', {})
        if server.get('type') == 'http':
            results.append("‚úÖ –¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: HTTP")
        else:
            results.append("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        
        if server.get('url') == 'https://mcp.context7.com/mcp':
            results.append("‚úÖ URL Context7 –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        else:
            results.append("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL")
        
        headers = server.get('headers', {})
        auth = headers.get('Authorization', '')
        if auth.startswith('Bearer ctx7sk-'):
            results.append("‚úÖ API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            results.append("‚ùå API –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        tools = config.get('tools', [])
        if 'resolve-library-id' in tools and 'get-library-docs' in tools:
            results.append("‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã Context7 –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        else:
            results.append("‚ùå –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã Context7 –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            
    except Exception as e:
        results.append(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Context7: {e}")
    
    return results

def validate_github_config(config_path: Path) -> List[str]:
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ GitHub MCP"""
    results = []
    
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∏ GitHub MCP
        if config.get('name') == 'github':
            results.append("‚úÖ –ò–º—è —Å–µ—Ä–≤–µ—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            results.append("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞")
        
        server = config.get('server', {})
        if server.get('command') == 'docker':
            results.append("‚úÖ –ö–æ–º–∞–Ω–¥–∞ Docker –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        else:
            results.append("‚ùå –ö–æ–º–∞–Ω–¥–∞ Docker –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        
        args = server.get('args', [])
        if 'ghcr.io/github/github-mcp-server' in args:
            results.append("‚úÖ Docker –æ–±—Ä–∞–∑ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        else:
            results.append("‚ùå Docker –æ–±—Ä–∞–∑ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        toolsets = config.get('toolsets', [])
        required_toolsets = ['context', 'repos', 'issues', 'pull_requests']
        if all(t in toolsets for t in required_toolsets):
            results.append("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ toolsets –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        else:
            results.append("‚ùå –ù–µ –≤—Å–µ toolsets –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            
    except Exception as e:
        results.append(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ GitHub: {e}")
    
    return results

def check_file_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤"""
    print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ MCP...")
    print("=" * 50)
    
    files_to_check = [
        Path(".cursor/mcp/context7.json"),
        Path(".cursor/mcp/github.json"), 
        Path(".cursor/mcp/servers.json"),
        Path(".vscode/mcp.json"),
        Path(".vscode/mcp-servers.json")
    ]
    
    all_valid = True
    
    for file_path in files_to_check:
        valid, message = check_json_file(file_path)
        print(f"üìÑ {file_path}: {message}")
        if not valid:
            all_valid = False
    
    return all_valid

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    print("üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö MCP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
    structure_valid = check_file_structure()
    
    if not structure_valid:
        print("\n‚ùå –ù–µ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –≤–∞–ª–∏–¥–Ω—ã")
        return
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è Context7
    print(f"\nüß† –í–∞–ª–∏–¥–∞—Ü–∏—è Context7 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    print("-" * 40)
    context7_results = validate_context7_config(Path(".cursor/mcp/context7.json"))
    for result in context7_results:
        print(f"   {result}")
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è GitHub MCP  
    print(f"\nüêô –í–∞–ª–∏–¥–∞—Ü–∏—è GitHub MCP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    print("-" * 40)
    github_results = validate_github_config(Path(".cursor/mcp/github.json"))
    for result in github_results:
        print(f"   {result}")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    print(f"\nüìä –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å:")
    print("=" * 30)
    
    context7_success = all("‚úÖ" in r for r in context7_results)
    github_success = all("‚úÖ" in r for r in github_results)
    
    if context7_success:
        print("üß† Context7: ‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´")
    else:
        print("üß† Context7: ‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´")
    
    if github_success:
        print("üêô GitHub MCP: ‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´")
    else:
        print("üêô GitHub MCP: ‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´")
    
    if context7_success and github_success:
        print(f"\nüéâ –í–°–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –í–ê–õ–ò–î–ù–´!")
        print("üîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor")  
        print("2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 2-3 –º–∏–Ω—É—Ç—ã")
        print("3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —á–∞—Ç")
        print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: '–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä—ã React —Ö—É–∫–æ–≤'")
    else:
        print(f"\n‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ö")

if __name__ == "__main__":
    main()


