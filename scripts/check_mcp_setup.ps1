# GitHub MCP Setup Checker for Windows
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤

Write-Host "üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤" -ForegroundColor Green
Write-Host ""

$allPassed = $true

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
Write-Host "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Cyan
try {
    $dockerVersion = docker --version 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $dockerVersion" -ForegroundColor Green
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
        $dockerPs = docker ps 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Docker –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Red
            Write-Host "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop" -ForegroundColor Yellow
            $allPassed = $false
        }
    } else {
        throw "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω"
    }
} catch {
    Write-Host "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Red
    Write-Host "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop: https://www.docker.com/products/docker-desktop/" -ForegroundColor Yellow
    $allPassed = $false
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP
Write-Host ""
Write-Host "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP..." -ForegroundColor Cyan

if (Test-Path ".vscode\mcp.json") {
    try {
        $config = Get-Content ".vscode\mcp.json" | ConvertFrom-Json
        
        if ($config.servers -and $config.servers.github) {
            Write-Host "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GitHub MCP –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Green
            
            if ($config.servers.github.command -eq "docker") {
                Write-Host "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker" -ForegroundColor Green
            }
            
            $toolsets = $config.servers.github.env.GITHUB_TOOLSETS
            if ($toolsets) {
                Write-Host "‚úÖ –ù–∞–±–æ—Ä—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: $toolsets" -ForegroundColor Green
            }
        } else {
            Write-Host "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GitHub MCP –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Red
            $allPassed = $false
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤ JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" -ForegroundColor Red
        $allPassed = $false
    }
} else {
    Write-Host "‚ùå –§–∞–π–ª .vscode\mcp.json –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    $allPassed = $false
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª Cursor
Write-Host ""
Write-Host "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª Cursor..." -ForegroundColor Cyan

if (Test-Path "cursorrules.txt") {
    $rules = Get-Content "cursorrules.txt" -Raw
    if ($rules -like "*GitHub MCP*") {
        Write-Host "‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è GitHub MCP –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è GitHub MCP –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Red
        $allPassed = $false
    }
} else {
    Write-Host "‚ùå –§–∞–π–ª cursorrules.txt –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    $allPassed = $false
}

# –ó–∞–≥—Ä—É–∑–∫–∞ Docker –æ–±—Ä–∞–∑–∞
if ($allPassed) {
    Write-Host ""
    Write-Host "üì• –ó–∞–≥—Ä—É–∑–∫–∞ Docker –æ–±—Ä–∞–∑–∞ GitHub MCP..." -ForegroundColor Cyan
    try {
        docker pull ghcr.io/github/github-mcp-server 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Docker –æ–±—Ä–∞–∑ GitHub MCP –∑–∞–≥—Ä—É–∂–µ–Ω" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è –û–±—Ä–∞–∑ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å, –Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ—Ç–æ–≤—ã." -ForegroundColor Yellow
            Write-Host "Docker –∑–∞–≥—Ä—É–∑–∏—Ç –æ–±—Ä–∞–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏." -ForegroundColor Yellow
        }
    } catch {
        Write-Host "‚ö†Ô∏è –û–±—Ä–∞–∑ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å, –Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ—Ç–æ–≤—ã." -ForegroundColor Yellow
        Write-Host "Docker –∑–∞–≥—Ä—É–∑–∏—Ç –æ–±—Ä–∞–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏." -ForegroundColor Yellow
    }
}

Write-Host ""

if ($allPassed) {
    Write-Host "üéØ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    Write-Host ""
    Write-Host "‚ú® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Green
    Write-Host "1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor" -ForegroundColor White
    Write-Host "2. –ü–æ–ª—É—á–∏—Ç–µ GitHub Personal Access Token (—Å–º. GITHUB_MCP_SETUP.md)" -ForegroundColor White
    Write-Host "3. –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π —á–∞—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ: '–ü–æ–∫–∞–∂–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏'" -ForegroundColor White
} else {
    Write-Host "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ—à–ª–∏. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞." -ForegroundColor Red
    exit 1
}





