#!/usr/bin/env python3
"""
Context7 CLI - –£—Ç–∏–ª–∏—Ç–∞ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Context7 API
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python context7_cli.py search "react hooks"
    python context7_cli.py docs "/react-hook-form/documentation" --topic hooks --tokens 2000
"""

import requests
import json
import argparse
import sys
from typing import Optional, Dict, Any

# –í–∞—à API –∫–ª—é—á
API_KEY = "ctx7sk-a4b869ca-c3ab-4981-9adb-706327247c2d"
BASE_URL = "https://context7.com/api/v1"

class Context7API:
    def __init__(self, api_key: str):
        self.api_key = api_key
        self.base_url = BASE_URL
        self.session = requests.Session()
        self.session.headers.update({
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json"
        })
    
    def search(self, query: str) -> Optional[Dict[Any, Any]]:
        """–ü–æ–∏—Å–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫"""
        try:
            response = self.session.get(
                f"{self.base_url}/search",
                params={"query": query},
                timeout=10
            )
            
            if response.status_code == 200:
                return response.json()
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {response.status_code} - {response.text}")
                return None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
            return None
    
    def get_docs(self, library_id: str, topic: str = "", tokens: int = 5000) -> Optional[Dict[Any, Any]]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"""
        params = {
            "library_id": library_id,
            "tokens": tokens
        }
        
        if topic:
            params["topic"] = topic
        
        try:
            response = self.session.get(
                f"{self.base_url}/docs",
                params=params,
                timeout=15
            )
            
            if response.status_code == 200:
                return response.json()
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: {response.status_code} - {response.text}")
                return None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
            return None

def cmd_search(args):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞"""
    api = Context7API(API_KEY)
    
    print(f"üîç –ü–æ–∏—Å–∫: {args.query}")
    results = api.search(args.query)
    
    if not results:
        return
    
    libraries = results.get('results', [])
    
    if not libraries:
        print("‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ: {len(libraries)} –±–∏–±–ª–∏–æ—Ç–µ–∫")
    print("=" * 80)
    
    for i, lib in enumerate(libraries, 1):
        print(f"\n{i}. üìö {lib.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
        print(f"   üÜî ID: {lib.get('id', 'N/A')}")
        print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {lib.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')}")
        print(f"   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: {lib.get('trustScore', 0)}")
        print(f"   üî¢ –ü—Ä–∏–º–µ—Ä–æ–≤ –∫–æ–¥–∞: {lib.get('totalSnippets', 0)}")
        print(f"   üìÑ –¢–æ–∫–µ–Ω–æ–≤: {lib.get('totalTokens', 0):,}")
        
        versions = lib.get('versions', [])
        if versions:
            print(f"   üì¶ –í–µ—Ä—Å–∏–∏: {', '.join(versions[:5])}")
        
        if i >= args.limit:
            remaining = len(libraries) - args.limit
            if remaining > 0:
                print(f"\n... –∏ –µ—â—ë {remaining} —Ä–µ–∑—É–ª—å—Ç–∞—Ç(–æ–≤)")
            break

def cmd_docs(args):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"""
    api = Context7API(API_KEY)
    
    print(f"üìö –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: {args.library_id}")
    if args.topic:
        print(f"üéØ –¢–µ–º–∞: {args.topic}")
    print(f"üî¢ –¢–æ–∫–µ–Ω–æ–≤: {args.tokens:,}")
    
    docs = api.get_docs(args.library_id, args.topic, args.tokens)
    
    if not docs:
        return
    
    print("\n" + "=" * 80)
    print("üìñ –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø")
    print("=" * 80)
    
    content = docs.get('content', '')
    if content:
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å –æ—Ç—Å—Ç—É–ø–æ–º
        lines = content.split('\n')
        for line in lines[:50]:  # –ü–µ—Ä–≤—ã–µ 50 —Å—Ç—Ä–æ–∫
            print(f"   {line}")
        
        if len(lines) > 50:
            print(f"\n... (–ø–æ–∫–∞–∑–∞–Ω–æ –ø–µ—Ä–≤—ã—Ö 50 —Å—Ç—Ä–æ–∫ –∏–∑ {len(lines)})")
    else:
        print("‚ùå –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    meta = docs.get('metadata', {})
    if meta:
        print(f"\nüìä –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:")
        for key, value in meta.items():
            print(f"   {key}: {value}")

def cmd_interactive():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º"""
    api = Context7API(API_KEY)
    
    print("üß† Context7 Interactive Mode")
    print("–ö–æ–º–∞–Ω–¥—ã: search <query>, docs <library_id> [topic], exit")
    print("=" * 50)
    
    while True:
        try:
            command = input("\nüí° Context7> ").strip()
            
            if not command:
                continue
            
            if command.lower() in ['exit', 'quit', 'q']:
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            
            parts = command.split()
            cmd = parts[0].lower()
            
            if cmd == 'search' and len(parts) > 1:
                query = ' '.join(parts[1:])
                print(f"üîç –ü–æ–∏—Å–∫: {query}")
                results = api.search(query)
                
                if results and results.get('results'):
                    for i, lib in enumerate(results['results'][:3], 1):
                        print(f"{i}. {lib.get('title')} - {lib.get('id')}")
            
            elif cmd == 'docs' and len(parts) > 1:
                library_id = parts[1]
                topic = parts[2] if len(parts) > 2 else ""
                
                docs = api.get_docs(library_id, topic, 1000)
                if docs:
                    content = docs.get('content', '')[:300]
                    print(f"üìö {content}...")
            
            else:
                print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: search <query>, docs <library_id> [topic]")
                
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    parser = argparse.ArgumentParser(description="Context7 CLI - —Ä–∞–±–æ—Ç–∞ —Å Context7 API")
    subparsers = parser.add_subparsers(dest='command', help='–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã')
    
    # –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞
    search_parser = subparsers.add_parser('search', help='–ü–æ–∏—Å–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫')
    search_parser.add_argument('query', help='–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å')
    search_parser.add_argument('--limit', type=int, default=10, help='–ú–∞–∫—Å–∏–º—É–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 10)')
    
    # –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    docs_parser = subparsers.add_parser('docs', help='–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏')
    docs_parser.add_argument('library_id', help='ID –±–∏–±–ª–∏–æ—Ç–µ–∫–∏')
    docs_parser.add_argument('--topic', default='', help='–ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ç–µ–º–∞')
    docs_parser.add_argument('--tokens', type=int, default=5000, help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 5000)')
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    subparsers.add_parser('interactive', help='–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º')
    
    args = parser.parse_args()
    
    if not args.command:
        parser.print_help()
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º requests
    try:
        import requests
    except ImportError:
        print("‚ùå –ú–æ–¥—É–ª—å requests –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install requests")
        sys.exit(1)
    
    if args.command == 'search':
        cmd_search(args)
    elif args.command == 'docs':
        cmd_docs(args)
    elif args.command == 'interactive':
        cmd_interactive()

if __name__ == "__main__":
    main()





