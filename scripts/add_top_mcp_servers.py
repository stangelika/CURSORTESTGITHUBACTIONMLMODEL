#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–ø-3 MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
"""

import json
import shutil
from pathlib import Path

# –¢–æ–ø-3 —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞
TOP_SERVERS = {
    "markitdown": {
        "command": "npx",
        "args": ["-y", "@microsoft/markitdown-mcp@latest"],
        "description": "–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è PDF/Word/Excel –≤ Markdown (74,351‚≠ê)",
        "examples": [
            "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π —ç—Ç–æ—Ç PDF —Ñ–∞–π–ª –≤ Markdown",
            "–ò–∑–≤–ª–µ–∫–∏ —Ç–µ–∫—Å—Ç –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", 
            "–ü—Ä–µ–æ–±—Ä–∞–∑—É–π Word –¥–æ–∫—É–º–µ–Ω—Ç –≤ Markdown"
        ]
    },
    "playwright": {
        "command": "npx", 
        "args": ["-y", "@microsoft/playwright-mcp@latest"],
        "description": "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –≤–µ–±-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (19,749‚≠ê)",
        "examples": [
            "–°–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã github.com",
            "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –Ω–∞ —Å–∞–π—Ç–µ",
            "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
        ]
    },
    "firecrawl": {
        "command": "npx",
        "args": ["-y", "@firecrawl/mcp@latest"],
        "description": "–í–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (4,514‚≠ê)",
        "examples": [
            "–ò–∑–≤–ª–µ–∫–∏ –≤—Å–µ —Å—Å—ã–ª–∫–∏ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞",
            "–°–∫–∞—á–∞–π —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–ª–æ–≥–∞ –≤ Markdown —Ñ–æ—Ä–º–∞—Ç–µ",
            "–ü–æ–ª—É—á–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö —Å —Å–∞–π—Ç–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞"
        ]
    }
}

def backup_config():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config_path = Path(".vscode/mcp.json")
    backup_path = Path(".vscode/mcp.json.backup")
    
    if config_path.exists():
        shutil.copy2(config_path, backup_path)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
        return True
    return False

def load_current_config():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config_path = Path(".vscode/mcp.json")
    
    if config_path.exists():
        try:
            with open(config_path, 'r', encoding='utf-8') as f:
                return json.load(f)
        except json.JSONDecodeError:
            print("‚ùå –û—à–∏–±–∫–∞ –≤ JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return None
    else:
        print("‚ùå –§–∞–π–ª .vscode/mcp.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None

def add_servers_to_config(config, servers_to_add):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    if "servers" not in config:
        config["servers"] = {}
    
    added_servers = []
    skipped_servers = []
    
    for server_name, server_config in servers_to_add.items():
        if server_name not in config["servers"]:
            # –£–±–∏—Ä–∞–µ–º description –∏ examples - –æ–Ω–∏ –Ω–µ –Ω—É–∂–Ω—ã –≤ JSON –∫–æ–Ω—Ñ–∏–≥–µ
            clean_config = {
                "command": server_config["command"],
                "args": server_config["args"]
            }
            config["servers"][server_name] = clean_config
            added_servers.append(server_name)
        else:
            skipped_servers.append(server_name)
    
    return config, added_servers, skipped_servers

def save_config(config):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config_path = Path(".vscode/mcp.json")
    
    try:
        with open(config_path, 'w', encoding='utf-8') as f:
            json.dump(config, f, indent=2, ensure_ascii=False)
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {config_path}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
        return False

def show_server_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–∞—Ö"""
    print("üî• –¢–æ–ø-3 —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö MCP —Å–µ—Ä–≤–µ—Ä–∞:")
    print("=" * 60)
    
    for i, (server_name, server_info) in enumerate(TOP_SERVERS.items(), 1):
        print(f"\n{i}. üì¶ {server_name.upper()}")
        print(f"   {server_info['description']}")
        print(f"   üìù –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
        for example in server_info['examples']:
            print(f"      ‚Ä¢ {example}")

def main():
    print("üöÄ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–ø-3 MCP —Å–µ—Ä–≤–µ—Ä–æ–≤")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–∞—Ö
    show_server_info()
    
    print(f"\nü§î –î–æ–±–∞–≤–∏—Ç—å —ç—Ç–∏ —Å–µ—Ä–≤–µ—Ä—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é? (y/n): ", end="")
    choice = input().lower()
    
    if choice != 'y':
        print("‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    print(f"\nüìã –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    backup_created = backup_config()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = load_current_config()
    if config is None:
        return
    
    print(f"‚úÖ –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    print(f"   –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–µ—Ä—ã: {list(config.get('servers', {}).keys())}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä—ã
    updated_config, added, skipped = add_servers_to_config(config, TOP_SERVERS)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if save_config(updated_config):
        print(f"\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        
        if added:
            print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {len(added)}")
            for server in added:
                print(f"      ‚Ä¢ {server}")
        
        if skipped:
            print(f"   ‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç): {len(skipped)}")
            for server in skipped:
                print(f"      ‚Ä¢ {server}")
        
        print(f"\nüîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print(f"   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor –ø–æ–ª–Ω–æ—Å—Ç—å—é")
        print(f"   2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —á–∞—Ç")
        print(f"   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:")
        
        for server_name, server_info in TOP_SERVERS.items():
            if server_name in added:
                example = server_info['examples'][0]
                print(f"      ‚Ä¢ {example}")
        
        print(f"\nüí° –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤ RECOMMENDED_MCP_SERVERS.md")
        
        if backup_created:
            print(f"\nüõ°Ô∏è –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: .vscode/mcp.json.backup")
    else:
        print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
        if backup_created:
            print(f"üí° –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: .vscode/mcp.json.backup")

if __name__ == "__main__":
    main()





