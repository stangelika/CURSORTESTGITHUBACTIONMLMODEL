#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Context7 REST API
"""

import requests
import json
import sys
from typing import Optional, Dict, Any

# –í–∞—à API –∫–ª—é—á
API_KEY = "ctx7sk-a4b869ca-c3ab-4981-9adb-706327247c2d"
BASE_URL = "https://context7.com/api/v1"

def search_libraries(query: str) -> Optional[Dict[Any, Any]]:
    """–ü–æ–∏—Å–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫ —á–µ—Ä–µ–∑ Context7 API"""
    
    url = f"{BASE_URL}/search"
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    params = {"query": query}
    
    try:
        print(f"üîç –ü–æ–∏—Å–∫: {query}")
        print(f"üì° URL: {url}")
        print(f"üîë API Key: {API_KEY[:20]}...")
        
        response = requests.get(url, headers=headers, params=params, timeout=10)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç!")
            return data
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return None
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ JSON: {e}")
        return None

def get_library_docs(library_id: str, topic: str = "", tokens: int = 5000) -> Optional[Dict[Any, Any]]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"""
    
    url = f"{BASE_URL}/docs"
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    
    params = {
        "library_id": library_id,
        "tokens": tokens
    }
    
    if topic:
        params["topic"] = topic
    
    try:
        print(f"üìö –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: {library_id}")
        if topic:
            print(f"üéØ –¢–µ–º–∞: {topic}")
        
        response = requests.get(url, headers=headers, params=params, timeout=15)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞!")
            return data
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return None

def display_search_results(results: Dict[Any, Any]):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞"""
    
    if not results or 'results' not in results:
        print("‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞")
        return
    
    libraries = results['results']
    print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ –±–∏–±–ª–∏–æ—Ç–µ–∫: {len(libraries)}")
    print("=" * 60)
    
    for i, lib in enumerate(libraries[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
        print(f"\n{i}. {lib.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
        print(f"   ID: {lib.get('id', 'N/A')}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {lib.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')}")
        print(f"   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: {lib.get('trustScore', 0)}")
        print(f"   üìù –ü—Ä–∏–º–µ—Ä–æ–≤: {lib.get('totalSnippets', 0)}")
        print(f"   üî§ –¢–æ–∫–µ–Ω–æ–≤: {lib.get('totalTokens', 0)}")
        
        versions = lib.get('versions', [])
        if versions:
            print(f"   üì¶ –í–µ—Ä—Å–∏–∏: {', '.join(versions[:3])}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Context7 REST API")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º requests –º–æ–¥—É–ª—å
    try:
        import requests
        print("‚úÖ –ú–æ–¥—É–ª—å requests –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError:
        print("‚ùå –ú–æ–¥—É–ª—å requests –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install requests")
        sys.exit(1)
    
    print()
    
    # 1. –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
    search_queries = [
        "react hook form",
        "nextjs",
        "typescript",
    ]
    
    for query in search_queries:
        print(f"\n{'='*60}")
        results = search_libraries(query)
        
        if results:
            display_search_results(results)
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–µ—Ä–≤–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
            if results.get('results') and len(results['results']) > 0:
                first_lib = results['results'][0]
                lib_id = first_lib.get('id')
                
                if lib_id:
                    print(f"\nüìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...")
                    docs = get_library_docs(lib_id, tokens=1000)
                    
                    if docs:
                        print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞ –¥–ª—è {first_lib.get('title')}")
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤
                        content = docs.get('content', '')
                        if content:
                            preview = content[:200] + "..." if len(content) > 200 else content
                            print(f"üìñ –ü—Ä–µ–≤—å—é: {preview}")
        
        print("-" * 60)
    
    print(f"\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üí° Context7 API —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ MCP —Å–µ—Ä–≤–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Cursor")

if __name__ == "__main__":
    main()





