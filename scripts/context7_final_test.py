#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Context7 API - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–µ ID –∏–∑ –ø–æ–∏—Å–∫–∞
"""

import requests
import json

API_KEY = "ctx7sk-a4b869ca-c3ab-4981-9adb-706327247c2d"
BASE_URL = "https://context7.com/api/v1"

def search_and_get_docs():
    """–ü–æ–∏—Å–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É ID"""
    
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    
    print("üîç –ü–æ–∏—Å–∫ React...")
    
    # 1. –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º React
    search_response = requests.get(
        f"{BASE_URL}/search",
        headers=headers,
        params={"query": "react"},
        timeout=10
    )
    
    if search_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {search_response.text}")
        return
    
    search_data = search_response.json()
    results = search_data.get('results', [])
    
    if not results:
        print("‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞")
        return
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    first_result = results[0]
    library_id = first_result.get('id')
    library_title = first_result.get('title')
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞: {library_title}")
    print(f"üÜî ID: {library_id}")
    
    # 2. –¢–µ–ø–µ—Ä—å –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    docs_params_variants = [
        {"library_id": library_id, "tokens": 1000},
        {"context7CompatibleLibraryID": library_id, "tokens": 1000},
        {"id": library_id, "tokens": 1000},
        {"libraryId": library_id, "tokens": 1000}
    ]
    
    print(f"\nüìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...")
    
    for i, params in enumerate(docs_params_variants, 1):
        print(f"\n{i}. –ü–æ–ø—ã—Ç–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: {list(params.keys())}")
        
        try:
            docs_response = requests.get(
                f"{BASE_URL}/docs",
                headers=headers,
                params=params,
                timeout=10
            )
            
            print(f"   üìä Status: {docs_response.status_code}")
            
            if docs_response.status_code == 200:
                data = docs_response.json()
                content = data.get('content', '')
                
                print(f"   ‚úÖ –£–°–ü–ï–•! –ü–æ–ª—É—á–µ–Ω–æ {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                
                if content:
                    preview = content[:300].replace('\n', ' ')
                    print(f"   üìñ –ü—Ä–µ–≤—å—é: {preview}...")
                
                print(f"\nüéâ –†–∞–±–æ—á–∏–π —Ñ–æ—Ä–º–∞—Ç –Ω–∞–π–¥–µ–Ω!")
                return params
            else:
                error_text = docs_response.text[:100]
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {error_text}...")
                
        except Exception as e:
            print(f"   ‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    print(f"\n‚ùå –ù–∏ –æ–¥–∏–Ω —Ñ–æ—Ä–º–∞—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
    return None

def test_different_endpoints():
    """–¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ API"""
    
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    
    # –í–æ–∑–º–æ–∂–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    endpoints = [
        f"{BASE_URL}/docs",
        f"{BASE_URL}/documentation", 
        f"{BASE_URL}/library-docs",
        f"{BASE_URL}/get-docs"
    ]
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    library_id = "/microsoft/typescript"
    
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")
    print(f"üÜî Library ID: {library_id}")
    
    for endpoint in endpoints:
        print(f"\nüîó –¢–µ—Å—Ç: {endpoint}")
        
        try:
            response = requests.get(
                endpoint,
                headers=headers,
                params={"library_id": library_id, "tokens": 500},
                timeout=5
            )
            
            print(f"   üìä Status: {response.status_code}")
            
            if response.status_code == 200:
                print(f"   ‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                data = response.json()
                if 'content' in data:
                    print(f"   üìñ –°–æ–¥–µ—Ä–∂–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")
                return endpoint
            else:
                print(f"   ‚ùå {response.status_code}: {response.text[:50]}...")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}...")
    
    return None

def main():
    print("üéØ Context7 API - –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("=" * 60)
    
    # 1. –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    working_params = search_and_get_docs()
    
    print(f"\n" + "=" * 60)
    
    # 2. –¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    working_endpoint = test_different_endpoints()
    
    print(f"\nüèÅ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("=" * 40)
    
    print("‚úÖ –ü–æ–∏—Å–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫: –†–ê–ë–û–¢–ê–ï–¢")
    
    if working_params:
        print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: –†–ê–ë–û–¢–ê–ï–¢")
        print(f"   –†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {working_params}")
    else:
        print("‚ùå –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç API")
        print("   - –î—Ä—É–≥–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")
        print("   - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è API –∫–ª—é—á–∞")
    
    if working_endpoint:
        print(f"‚úÖ –†–∞–±–æ—á–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç: {working_endpoint}")
    
    print(f"\nüß† Context7 MCP —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!")
    print(f"üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ MCP")

if __name__ == "__main__":
    main()





