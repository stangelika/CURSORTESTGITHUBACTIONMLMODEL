#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞ Context7
"""

import json
import subprocess
from pathlib import Path

def check_context7_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Context7"""
    print("üß† –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Context7...")
    
    config_path = Path(".vscode/mcp.json")
    if not config_path.exists():
        print("‚ùå –§–∞–π–ª .vscode/mcp.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        if 'servers' in config and 'context7' in config['servers']:
            context7_config = config['servers']['context7']
            
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Context7 –Ω–∞–π–¥–µ–Ω–∞")
            
            if context7_config.get('type') == 'http':
                print("‚úÖ –¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: HTTP (remote server)")
            
            if context7_config.get('url') == 'https://mcp.context7.com/mcp':
                print("‚úÖ URL: https://mcp.context7.com/mcp")
            
            auth_header = context7_config.get('headers', {}).get('Authorization', '')
            if auth_header.startswith('Bearer ctx7sk-'):
                print("‚úÖ API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            else:
                print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
                return False
            
            return True
        else:
            print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Context7 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
    except json.JSONDecodeError:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def check_github_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ GitHub MCP"""
    print("\nüêô –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ GitHub MCP...")
    
    config_path = Path(".vscode/mcp.json")
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        if 'servers' in config and 'github' in config['servers']:
            github_config = config['servers']['github']
            
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GitHub MCP –Ω–∞–π–¥–µ–Ω–∞")
            
            if github_config.get('command') == 'docker':
                print("‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker")
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
                try:
                    subprocess.run(['docker', '--version'], 
                                 capture_output=True, text=True, check=True)
                    print("‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                    
                    subprocess.run(['docker', 'ps'], 
                                 capture_output=True, text=True, check=True)
                    print("‚úÖ Docker –∑–∞–ø—É—â–µ–Ω")
                    return True
                except (subprocess.CalledProcessError, FileNotFoundError):
                    print("‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω")
                    return False
            
        else:
            print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GitHub MCP –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ GitHub MCP: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤")
    print("=" * 50)
    print()
    
    context7_ok = check_context7_config()
    github_ok = check_github_config()
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print("=" * 30)
    
    if context7_ok:
        print("üß† Context7 MCP: ‚úÖ –ì–û–¢–û–í")
        print("   ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: OK")
        print("   ‚Ä¢ API –∫–ª—é—á: OK")
        print("   ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Cursor")
    else:
        print("üß† Context7 MCP: ‚ùå –û–®–ò–ë–ö–ê")
    
    print()
    
    if github_ok:
        print("üêô GitHub MCP: ‚úÖ –ì–û–¢–û–í")
        print("   ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: OK")
        print("   ‚Ä¢ Docker: OK")
        print("   ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç: GitHub Personal Access Token")
    else:
        print("üêô GitHub MCP: ‚ùå –¢–†–ï–ë–£–ï–¢ DOCKER")
    
    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("=" * 20)
    
    if context7_ok:
        print("1. üîÑ –ü–ï–†–ï–ó–ê–ü–£–°–¢–ò–¢–ï CURSOR –ø–æ–ª–Ω–æ—Å—Ç—å—é")
        print("2. üß™ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —á–∞—Ç")
        print("3. üß† –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: '–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä—ã React —Ö—É–∫–æ–≤'")
    else:
        print("1. ‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Context7")
    
    if not github_ok:
        print("4. üê≥ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop")
        print("5. üîë –ü–æ–ª—É—á–∏—Ç–µ GitHub Personal Access Token")
    else:
        print("4. üîë –ü–æ–ª—É—á–∏—Ç–µ GitHub Personal Access Token")
    
    if context7_ok and github_ok:
        print("\nüéâ –í–°–ï –ì–û–¢–û–í–û! –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Cursor –æ–±–∞ MCP —Å–µ—Ä–≤–µ—Ä–∞ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!")
    elif context7_ok or github_ok:
        print(f"\n‚ö†Ô∏è –û–¥–∏–Ω —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤, –≤—Ç–æ—Ä–æ–π —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    else:
        print(f"\n‚ùå –û–±–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Ç—Ä–µ–±—É—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

if __name__ == "__main__":
    main()





