#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ MCP —Å–∏—Å—Ç–µ–º—ã
"""

import json
import subprocess
import requests
from pathlib import Path
from datetime import datetime

def check_docker():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker"""
    print("üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...")
    
    try:
        # –í–µ—Ä—Å–∏—è Docker
        result = subprocess.run(['docker', '--version'], 
                              capture_output=True, text=True, check=True)
        print(f"   ‚úÖ –í–µ—Ä—Å–∏—è: {result.stdout.strip()}")
        
        # Docker Engine
        result = subprocess.run(['docker', 'ps'], 
                              capture_output=True, text=True, check=True)
        print("   ‚úÖ Engine –∑–∞–ø—É—â–µ–Ω")
        
        # Docker –æ–±—Ä–∞–∑ GitHub MCP
        result = subprocess.run(['docker', 'images', 'ghcr.io/github/github-mcp-server'], 
                              capture_output=True, text=True, check=True)
        if 'ghcr.io/github/github-mcp-server' in result.stdout:
            print("   ‚úÖ GitHub MCP –æ–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω")
        else:
            print("   ‚ö†Ô∏è GitHub MCP –æ–±—Ä–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        return True
        
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("   ‚ùå Docker –ø—Ä–æ–±–ª–µ–º—ã")
        return False

def check_network():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"""
    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–∏...")
    
    try:
        # Context7 endpoint
        response = requests.head('https://mcp.context7.com/mcp', timeout=5)
        if response.status_code in [200, 405, 406]:  # 405/406 —ç—Ç–æ OK –¥–ª—è HEAD –∑–∞–ø—Ä–æ—Å–∞
            print("   ‚úÖ Context7 endpoint –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è Context7 –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}")
        
        # –û–±—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
        response = requests.head('https://google.com', timeout=5)
        print("   ‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        return True
        
    except requests.exceptions.RequestException:
        print("   ‚ùå –°–µ—Ç–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")
        return False

def check_configs():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...")
    
    configs = [
        ".cursor/mcp/context7.json",
        ".cursor/mcp/github.json", 
        ".cursor/mcp/servers.json",
        ".vscode/mcp.json",
        ".vscode/mcp-servers.json"
    ]
    
    all_valid = True
    
    for config_path in configs:
        path = Path(config_path)
        if path.exists():
            try:
                with open(path, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                print(f"   ‚úÖ {config_path}: {len(data)} –∫–ª—é—á–µ–π")
            except json.JSONDecodeError:
                print(f"   ‚ùå {config_path}: –û—à–∏–±–∫–∞ JSON")
                all_valid = False
        else:
            print(f"   ‚ùå {config_path}: –ù–µ –Ω–∞–π–¥–µ–Ω")
            all_valid = False
    
    return all_valid

def check_api_keys():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π"""
    print("\nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π...")
    
    try:
        # Context7 API –∫–ª—é—á
        config_path = Path(".cursor/mcp/context7.json")
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        headers = config.get('server', {}).get('headers', {})
        auth = headers.get('Authorization', '')
        
        if auth.startswith('Bearer ctx7sk-'):
            print("   ‚úÖ Context7 API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return True
        else:
            print("   ‚ùå Context7 API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–µ–π: {e}")
        return False

def generate_activation_instructions():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏"""
    print("\nüéØ –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ê–ö–¢–ò–í–ê–¶–ò–ò:")
    print("=" * 50)
    
    print("1Ô∏è‚É£ –ü–û–õ–ù–´–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö CURSOR:")
    print("   ‚Ä¢ –ó–∞–∫—Ä–æ–π—Ç–µ –í–°–ï –æ–∫–Ω–∞ Cursor")
    print("   ‚Ä¢ Ctrl+Shift+Esc ‚Üí –ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Cursor")
    print("   ‚Ä¢ –ü–æ–¥–æ–∂–¥–∏—Ç–µ 30 —Å–µ–∫—É–Ω–¥")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ Cursor –ö–ê–ö –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†")
    print("   ‚Ä¢ –ü–æ–¥–æ–∂–¥–∏—Ç–µ 3-4 –ú–ò–ù–£–¢–´ (–∫—Ä–∏—Ç–∏—á–Ω–æ!)")
    
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ê–¶–ò–ò:")
    print("   ‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–∏–∑—É –æ–∫–Ω–∞ Cursor –Ω–∞ –∑–Ω–∞—á–∫–∏ MCP")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –ù–û–í–´–ô —á–∞—Ç")
    print("   ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: '–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä—ã React —Ö—É–∫–æ–≤'")
    
    print("\n3Ô∏è‚É£ –ü–†–ò–ó–ù–ê–ö–ò –£–°–ü–ï–•–ê:")
    print("   ‚Ä¢ –ó–Ω–∞—á–∫–∏ MCP –≤–Ω–∏–∑—É Cursor")
    print("   ‚Ä¢ Context7 –æ—Ç–≤–µ—á–∞–µ—Ç —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π")
    print("   ‚Ä¢ –ù–µ—Ç –æ—à–∏–±–æ–∫ 'Tool not found'")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê MCP –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    docker_ok = check_docker()
    network_ok = check_network() 
    configs_ok = check_configs()
    keys_ok = check_api_keys()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    print(f"\nüìä –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:")
    print("=" * 40)
    
    print(f"üê≥ Docker:        {'‚úÖ –û–ö' if docker_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–´'}")
    print(f"üåê –°–µ—Ç—å:          {'‚úÖ –û–ö' if network_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–´'}")
    print(f"‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:  {'‚úÖ –û–ö' if configs_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–´'}")
    print(f"üîë API –∫–ª—é—á–∏:     {'‚úÖ –û–ö' if keys_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–´'}")
    
    all_ready = docker_ok and network_ok and configs_ok and keys_ok
    
    if all_ready:
        print(f"\nüéâ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê!")
        print(f"üî¥ –ü–†–û–ë–õ–ï–ú–ê: Cursor –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª MCP —Å–µ—Ä–≤–µ—Ä—ã")
        print(f"üéØ –†–ï–®–ï–ù–ò–ï: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Cursor")
        
        generate_activation_instructions()
        
    else:
        print(f"\n‚ö†Ô∏è –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –°–ò–°–¢–ï–ú–ï")
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –≤—ã—à–µ –ø–µ—Ä–µ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π MCP")

if __name__ == "__main__":
    main()

